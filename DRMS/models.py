# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Remove `managed = False` lines for those models you wish to give write DB access
# Feel free to rename the models, but don't rename db_table values or field names.
#
# Also note: You'll have to insert the output of 'django-admin.py sqlcustom [appname]'
# into your database.
from __future__ import unicode_literals

from django.db import models
from datetime import datetime

class DRMSDataSeries(models.Model):
	name = models.CharField("Data series name", help_text = "Meta-data database table of the data series. Must be fully qualified.", max_length=20, primary_key = True)
	fits_header_view = models.CharField(help_text = "View to retrieve fits header for the data series.", max_length=50)
	fits_keyword_view = models.CharField(help_text = "View to retrieve fits keywords, units and comments for the data series.", max_length=50)
	
	class Meta:
		db_table = "drms_data_series"
		verbose_name = "Data series"
		verbose_name_plural = "Data series"
	
	def __unicode__(self):
		return unicode(self.name)
	
	def __set_models(self):
		
		fits_header_models = FitsHeader.sub_models()
		if self.fits_header_view in fits_header_models:
			self.__fits_header_model = fits_header_models[self.fits_header_view]
		else:
			raise Exception("No fits header model with view name %s" % self.fits_header_view)
		
		fits_keyword_models = FitsKeyword.sub_models()
		if self.fits_keyword_view in fits_keyword_models:
			self.__fits_keyword_model = fits_keyword_models[self.fits_keyword_view]
		else:
			raise Exception("No fits keyword model with view name %s" % self.fits_keyword_view)
	
	@property
	def fits_header_model(self):
		if not hasattr(self, '__fits_header_model'):
			self.__set_models()
		return self.__fits_header_model
	
	@property
	def fits_keyword_model(self):
		if not hasattr(self, '__fits_keyword_model'):
			self.__set_models()
		return self.__fits_keyword_model
	
	@property
	def keywords(self):
		if not hasattr(self, '__fits_keywords'):
			self.__keywords = dict()
			example = self.fits_header_model.objects.all()[0]
			fits_keywords = dict([(k.keyword, (k.unit, k.comment)) for k in self.fits_keyword_model.objects.all()])
			
			for field in self.fits_header_model._meta.fields:
				keyword = dict()
				if isinstance(getattr(example, field.attname), basestring):
					keyword["type"] = "string"
				else:
					try:
						keyword["type"] = getattr(example, field.attname).__class__.__name__
					except:
						type(getattr(example, field.attname)).__name__
				
				keyword["name"] = field.db_column
				keyword["unit"], keyword["comment"] = fits_keywords[keyword["name"]]
				self.__keywords[field.attname] = keyword
		
		return self.__keywords

class FitsHeader(models.Model):
	
	class Meta:
		abstract = True
		get_latest_by = 'date_obs'
	
	def __unicode__(self):
		return unicode(self.recnum)
	
	@classmethod
	def sub_models(cls):
		return dict([(model._meta.db_table, model) for model in cls.__subclasses__()])

class FitsKeyword(models.Model):
	
	class Meta:
		abstract = True
	
	def __unicode__(self):
		return unicode(self.keyword)
	
	@classmethod
	def sub_models(cls):
		return dict([(model._meta.db_table, model) for model in cls.__subclasses__()])


# Following models are automaticaly generated using the inspectdb command of manage.py
# See https://docs.djangoproject.com/en/1.6/howto/legacy-databases/

class AiaLev1FitsHeader(FitsHeader):
	bld_vers = models.TextField(db_column='BLD_VERS', blank=True)
	lvl_num = models.FloatField(db_column='LVL_NUM', blank=True, null=True)
	t_rec = models.DateTimeField(db_column='T_REC', blank=True, null=True)
	origin = models.TextField(db_column='ORIGIN', blank=True)
	date = models.DateTimeField(db_column='DATE', blank=True, null=True)
	telescop = models.TextField(db_column='TELESCOP', blank=True)
	instrume = models.TextField(db_column='INSTRUME', blank=True)
	date_obs = models.DateTimeField(db_column='DATE-OBS', blank=True, null=True)
	t_obs = models.DateTimeField(db_column='T_OBS', blank=True, null=True)
	camera = models.IntegerField(db_column='CAMERA', blank=True, null=True)
	img_type = models.TextField(db_column='IMG_TYPE', blank=True)
	exptime = models.FloatField(db_column='EXPTIME', blank=True, null=True)
	expsdev = models.FloatField(db_column='EXPSDEV', blank=True, null=True)
	int_time = models.FloatField(db_column='INT_TIME', blank=True, null=True)
	wavelnth = models.IntegerField(db_column='WAVELNTH', blank=True, null=True)
	waveunit = models.TextField(db_column='WAVEUNIT', blank=True)
	wave_str = models.TextField(db_column='WAVE_STR', blank=True)
	fsn = models.IntegerField(db_column='FSN', blank=True, null=True)
	fid = models.IntegerField(db_column='FID', blank=True, null=True)
	quallev0 = models.IntegerField(db_column='QUALLEV0', blank=True, null=True)
	quality = models.IntegerField(db_column='QUALITY', blank=True, null=True)
	totvals = models.IntegerField(db_column='TOTVALS', blank=True, null=True)
	datavals = models.IntegerField(db_column='DATAVALS', blank=True, null=True)
	missvals = models.IntegerField(db_column='MISSVALS', blank=True, null=True)
	percentd = models.FloatField(db_column='PERCENTD', blank=True, null=True)
	datamin = models.IntegerField(db_column='DATAMIN', blank=True, null=True)
	datamax = models.IntegerField(db_column='DATAMAX', blank=True, null=True)
	datamedn = models.IntegerField(db_column='DATAMEDN', blank=True, null=True)
	datamean = models.FloatField(db_column='DATAMEAN', blank=True, null=True)
	datarms = models.FloatField(db_column='DATARMS', blank=True, null=True)
	dataskew = models.FloatField(db_column='DATASKEW', blank=True, null=True)
	datakurt = models.FloatField(db_column='DATAKURT', blank=True, null=True)
	datacent = models.FloatField(db_column='DATACENT', blank=True, null=True)
	datap01 = models.FloatField(db_column='DATAP01', blank=True, null=True)
	datap10 = models.FloatField(db_column='DATAP10', blank=True, null=True)
	datap25 = models.FloatField(db_column='DATAP25', blank=True, null=True)
	datap75 = models.FloatField(db_column='DATAP75', blank=True, null=True)
	datap90 = models.FloatField(db_column='DATAP90', blank=True, null=True)
	datap95 = models.FloatField(db_column='DATAP95', blank=True, null=True)
	datap98 = models.FloatField(db_column='DATAP98', blank=True, null=True)
	datap99 = models.FloatField(db_column='DATAP99', blank=True, null=True)
	nsatpix = models.IntegerField(db_column='NSATPIX', blank=True, null=True)
	oscnmean = models.FloatField(db_column='OSCNMEAN', blank=True, null=True)
	oscnrms = models.FloatField(db_column='OSCNRMS', blank=True, null=True)
	flat_rec = models.TextField(db_column='FLAT_REC', blank=True)
	nspikes = models.IntegerField(db_column='NSPIKES', blank=True, null=True)
	ctype1 = models.TextField(db_column='CTYPE1', blank=True)
	cunit1 = models.TextField(db_column='CUNIT1', blank=True)
	crval1 = models.FloatField(db_column='CRVAL1', blank=True, null=True)
	cdelt1 = models.FloatField(db_column='CDELT1', blank=True, null=True)
	crpix1 = models.FloatField(db_column='CRPIX1', blank=True, null=True)
	ctype2 = models.TextField(db_column='CTYPE2', blank=True)
	cunit2 = models.TextField(db_column='CUNIT2', blank=True)
	crval2 = models.FloatField(db_column='CRVAL2', blank=True, null=True)
	cdelt2 = models.FloatField(db_column='CDELT2', blank=True, null=True)
	crpix2 = models.FloatField(db_column='CRPIX2', blank=True, null=True)
	crota2 = models.FloatField(db_column='CROTA2', blank=True, null=True)
	r_sun = models.FloatField(db_column='R_SUN', blank=True, null=True)
	mpo_rec = models.TextField(db_column='MPO_REC', blank=True)
	inst_rot = models.FloatField(db_column='INST_ROT', blank=True, null=True)
	imscl_mp = models.FloatField(db_column='IMSCL_MP', blank=True, null=True)
	x0_mp = models.FloatField(db_column='X0_MP', blank=True, null=True)
	y0_mp = models.FloatField(db_column='Y0_MP', blank=True, null=True)
	asd_rec = models.TextField(db_column='ASD_REC', blank=True)
	sat_y0 = models.FloatField(db_column='SAT_Y0', blank=True, null=True)
	sat_z0 = models.FloatField(db_column='SAT_Z0', blank=True, null=True)
	sat_rot = models.FloatField(db_column='SAT_ROT', blank=True, null=True)
	acs_mode = models.TextField(db_column='ACS_MODE', blank=True)
	acs_eclp = models.TextField(db_column='ACS_ECLP', blank=True)
	acs_sunp = models.TextField(db_column='ACS_SUNP', blank=True)
	acs_safe = models.TextField(db_column='ACS_SAFE', blank=True)
	acs_cgt = models.TextField(db_column='ACS_CGT', blank=True)
	orb_rec = models.TextField(db_column='ORB_REC', blank=True)
	dsun_ref = models.FloatField(db_column='DSUN_REF', blank=True, null=True)
	dsun_obs = models.FloatField(db_column='DSUN_OBS', blank=True, null=True)
	rsun_ref = models.FloatField(db_column='RSUN_REF', blank=True, null=True)
	rsun_obs = models.FloatField(db_column='RSUN_OBS', blank=True, null=True)
	gaex_obs = models.FloatField(db_column='GAEX_OBS', blank=True, null=True)
	gaey_obs = models.FloatField(db_column='GAEY_OBS', blank=True, null=True)
	gaez_obs = models.FloatField(db_column='GAEZ_OBS', blank=True, null=True)
	haex_obs = models.FloatField(db_column='HAEX_OBS', blank=True, null=True)
	haey_obs = models.FloatField(db_column='HAEY_OBS', blank=True, null=True)
	haez_obs = models.FloatField(db_column='HAEZ_OBS', blank=True, null=True)
	obs_vr = models.FloatField(db_column='OBS_VR', blank=True, null=True)
	obs_vw = models.FloatField(db_column='OBS_VW', blank=True, null=True)
	obs_vn = models.FloatField(db_column='OBS_VN', blank=True, null=True)
	crln_obs = models.FloatField(db_column='CRLN_OBS', blank=True, null=True)
	crlt_obs = models.FloatField(db_column='CRLT_OBS', blank=True, null=True)
	car_rot = models.IntegerField(db_column='CAR_ROT', blank=True, null=True)
	hgln_obs = models.FloatField(db_column='HGLN_OBS', blank=True, null=True)
	hglt_obs = models.FloatField(db_column='HGLT_OBS', blank=True, null=True)
	roi_nwin = models.IntegerField(db_column='ROI_NWIN', blank=True, null=True)
	roi_sum = models.IntegerField(db_column='ROI_SUM', blank=True, null=True)
	roi_nax1 = models.IntegerField(db_column='ROI_NAX1', blank=True, null=True)
	roi_nay1 = models.IntegerField(db_column='ROI_NAY1', blank=True, null=True)
	roi_llx1 = models.IntegerField(db_column='ROI_LLX1', blank=True, null=True)
	roi_lly1 = models.IntegerField(db_column='ROI_LLY1', blank=True, null=True)
	roi_nax2 = models.IntegerField(db_column='ROI_NAX2', blank=True, null=True)
	roi_nay2 = models.IntegerField(db_column='ROI_NAY2', blank=True, null=True)
	roi_llx2 = models.IntegerField(db_column='ROI_LLX2', blank=True, null=True)
	roi_lly2 = models.IntegerField(db_column='ROI_LLY2', blank=True, null=True)
	pixlunit = models.TextField(db_column='PIXLUNIT', blank=True)
	dn_gain = models.FloatField(db_column='DN_GAIN', blank=True, null=True)
	eff_area = models.FloatField(db_column='EFF_AREA', blank=True, null=True)
	eff_ar_v = models.FloatField(db_column='EFF_AR_V', blank=True, null=True)
	tempccd = models.FloatField(db_column='TEMPCCD', blank=True, null=True)
	tempgt = models.FloatField(db_column='TEMPGT', blank=True, null=True)
	tempsmir = models.FloatField(db_column='TEMPSMIR', blank=True, null=True)
	tempfpad = models.FloatField(db_column='TEMPFPAD', blank=True, null=True)
	ispsname = models.TextField(db_column='ISPSNAME', blank=True)
	isppktim = models.DateTimeField(db_column='ISPPKTIM', blank=True, null=True)
	isppktvn = models.TextField(db_column='ISPPKTVN', blank=True)
	aivnmst = models.IntegerField(db_column='AIVNMST', blank=True, null=True)
	aimgots = models.IntegerField(db_column='AIMGOTS', blank=True, null=True)
	asqhdr = models.BigIntegerField(db_column='ASQHDR', blank=True, null=True)
	asqtnum = models.SmallIntegerField(db_column='ASQTNUM', blank=True, null=True)
	asqfsn = models.IntegerField(db_column='ASQFSN', blank=True, null=True)
	aiahfsn = models.IntegerField(db_column='AIAHFSN', blank=True, null=True)
	aecdelay = models.IntegerField(db_column='AECDELAY', blank=True, null=True)
	aiaecti = models.IntegerField(db_column='AIAECTI', blank=True, null=True)
	aiasen = models.IntegerField(db_column='AIASEN', blank=True, null=True)
	aifdbid = models.IntegerField(db_column='AIFDBID', blank=True, null=True)
	aimgotss = models.IntegerField(db_column='AIMGOTSS', blank=True, null=True)
	aifcps = models.SmallIntegerField(db_column='AIFCPS', blank=True, null=True)
	aiftswth = models.IntegerField(db_column='AIFTSWTH', blank=True, null=True)
	aifrmlid = models.IntegerField(db_column='AIFRMLID', blank=True, null=True)
	aiftsid = models.IntegerField(db_column='AIFTSID', blank=True, null=True)
	aihismxb = models.IntegerField(db_column='AIHISMXB', blank=True, null=True)
	aihis192 = models.IntegerField(db_column='AIHIS192', blank=True, null=True)
	aihis348 = models.IntegerField(db_column='AIHIS348', blank=True, null=True)
	aihis604 = models.IntegerField(db_column='AIHIS604', blank=True, null=True)
	aihis860 = models.IntegerField(db_column='AIHIS860', blank=True, null=True)
	aifwen = models.IntegerField(db_column='AIFWEN', blank=True, null=True)
	aimgshce = models.IntegerField(db_column='AIMGSHCE', blank=True, null=True)
	aectype = models.SmallIntegerField(db_column='AECTYPE', blank=True, null=True)
	aecmode = models.TextField(db_column='AECMODE', blank=True)
	aistate = models.TextField(db_column='AISTATE', blank=True)
	aiaecenf = models.SmallIntegerField(db_column='AIAECENF', blank=True, null=True)
	aifiltyp = models.SmallIntegerField(db_column='AIFILTYP', blank=True, null=True)
	aimshobc = models.FloatField(db_column='AIMSHOBC', blank=True, null=True)
	aimshobe = models.FloatField(db_column='AIMSHOBE', blank=True, null=True)
	aimshotc = models.FloatField(db_column='AIMSHOTC', blank=True, null=True)
	aimshote = models.FloatField(db_column='AIMSHOTE', blank=True, null=True)
	aimshcbc = models.FloatField(db_column='AIMSHCBC', blank=True, null=True)
	aimshcbe = models.FloatField(db_column='AIMSHCBE', blank=True, null=True)
	aimshctc = models.FloatField(db_column='AIMSHCTC', blank=True, null=True)
	aimshcte = models.FloatField(db_column='AIMSHCTE', blank=True, null=True)
	aicfgdl1 = models.SmallIntegerField(db_column='AICFGDL1', blank=True, null=True)
	aicfgdl2 = models.SmallIntegerField(db_column='AICFGDL2', blank=True, null=True)
	aicfgdl3 = models.SmallIntegerField(db_column='AICFGDL3', blank=True, null=True)
	aicfgdl4 = models.SmallIntegerField(db_column='AICFGDL4', blank=True, null=True)
	aifoenfl = models.SmallIntegerField(db_column='AIFOENFL', blank=True, null=True)
	aimgfsn = models.IntegerField(db_column='AIMGFSN', blank=True, null=True)
	aimgtyp = models.IntegerField(db_column='AIMGTYP', blank=True, null=True)
	aiawvlen = models.IntegerField(db_column='AIAWVLEN', blank=True, null=True)
	aiagp1 = models.IntegerField(db_column='AIAGP1', blank=True, null=True)
	aiagp2 = models.IntegerField(db_column='AIAGP2', blank=True, null=True)
	aiagp3 = models.IntegerField(db_column='AIAGP3', blank=True, null=True)
	aiagp4 = models.IntegerField(db_column='AIAGP4', blank=True, null=True)
	aiagp5 = models.IntegerField(db_column='AIAGP5', blank=True, null=True)
	aiagp6 = models.IntegerField(db_column='AIAGP6', blank=True, null=True)
	aiagp7 = models.IntegerField(db_column='AIAGP7', blank=True, null=True)
	aiagp8 = models.IntegerField(db_column='AIAGP8', blank=True, null=True)
	aiagp9 = models.IntegerField(db_column='AIAGP9', blank=True, null=True)
	aiagp10 = models.IntegerField(db_column='AIAGP10', blank=True, null=True)
	agt1svy = models.SmallIntegerField(db_column='AGT1SVY', blank=True, null=True)
	agt1svz = models.SmallIntegerField(db_column='AGT1SVZ', blank=True, null=True)
	agt2svy = models.SmallIntegerField(db_column='AGT2SVY', blank=True, null=True)
	agt2svz = models.SmallIntegerField(db_column='AGT2SVZ', blank=True, null=True)
	agt3svy = models.SmallIntegerField(db_column='AGT3SVY', blank=True, null=True)
	agt3svz = models.SmallIntegerField(db_column='AGT3SVZ', blank=True, null=True)
	agt4svy = models.SmallIntegerField(db_column='AGT4SVY', blank=True, null=True)
	agt4svz = models.SmallIntegerField(db_column='AGT4SVZ', blank=True, null=True)
	aimgshen = models.SmallIntegerField(db_column='AIMGSHEN', blank=True, null=True)
	keywddoc = models.TextField(db_column='KEYWDDOC', blank=True)
	series = models.TextField(db_column='SERIES', blank=True)
	recnum = models.BigIntegerField(db_column='RECNUM', blank=False, null=False, primary_key = True)
	sunum = models.BigIntegerField(db_column='SUNUM', blank=True, null=True)
	slotnum = models.IntegerField(db_column='SLOTNUM', blank=True, null=True)
	segment = models.TextField(db_column='SEGMENT', blank=True)
	
	class Meta:
		managed = False
		db_table = 'aia_lev1_fits_header'


class AiaLev1FitsKeyword(FitsKeyword):
	keyword = models.TextField(blank=False, primary_key = True)
	unit = models.TextField(blank=True)
	comment = models.TextField(blank=True)
	
	class Meta:
		managed = False
		db_table = 'aia_lev1_fits_keyword'

class HmiIc45sFitsHeader(FitsHeader):
	date = models.DateTimeField(db_column='DATE', blank=True, null=True)
	date_obs = models.DateTimeField(db_column='DATE-OBS', blank=True, null=True)
	telescop = models.TextField(db_column='TELESCOP', blank=True)
	instrume = models.TextField(db_column='INSTRUME', blank=True)
	wavelnth = models.FloatField(db_column='WAVELNTH', blank=True, null=True)
	camera = models.IntegerField(db_column='CAMERA', blank=True, null=True)
	bunit = models.TextField(db_column='BUNIT', blank=True)
	origin = models.TextField(db_column='ORIGIN', blank=True)
	content = models.TextField(db_column='CONTENT', blank=True)
	quality = models.IntegerField(db_column='QUALITY', blank=True, null=True)
	quallev1 = models.IntegerField(db_column='QUALLEV1', blank=True, null=True)
	bld_vers = models.TextField(db_column='BLD_VERS', blank=True)
	hcamid = models.IntegerField(db_column='HCAMID', blank=True, null=True)
	source = models.TextField(db_column='SOURCE', blank=True)
	totvals = models.IntegerField(db_column='TOTVALS', blank=True, null=True)
	datavals = models.IntegerField(db_column='DATAVALS', blank=True, null=True)
	missvals = models.IntegerField(db_column='MISSVALS', blank=True, null=True)
	satvals = models.IntegerField(db_column='SATVALS', blank=True, null=True)
	datamin2 = models.FloatField(db_column='DATAMIN2', blank=True, null=True)
	datamax2 = models.FloatField(db_column='DATAMAX2', blank=True, null=True)
	datamed2 = models.FloatField(db_column='DATAMED2', blank=True, null=True)
	datamea2 = models.FloatField(db_column='DATAMEA2', blank=True, null=True)
	datarms2 = models.FloatField(db_column='DATARMS2', blank=True, null=True)
	dataske2 = models.FloatField(db_column='DATASKE2', blank=True, null=True)
	datakur2 = models.FloatField(db_column='DATAKUR2', blank=True, null=True)
	datamin = models.FloatField(db_column='DATAMIN', blank=True, null=True)
	datamax = models.FloatField(db_column='DATAMAX', blank=True, null=True)
	datamedn = models.FloatField(db_column='DATAMEDN', blank=True, null=True)
	datamean = models.FloatField(db_column='DATAMEAN', blank=True, null=True)
	datarms = models.FloatField(db_column='DATARMS', blank=True, null=True)
	dataskew = models.FloatField(db_column='DATASKEW', blank=True, null=True)
	datakurt = models.FloatField(db_column='DATAKURT', blank=True, null=True)
	ctype1 = models.TextField(db_column='CTYPE1', blank=True)
	ctype2 = models.TextField(db_column='CTYPE2', blank=True)
	crpix1 = models.FloatField(db_column='CRPIX1', blank=True, null=True)
	crpix2 = models.FloatField(db_column='CRPIX2', blank=True, null=True)
	crval1 = models.FloatField(db_column='CRVAL1', blank=True, null=True)
	crval2 = models.FloatField(db_column='CRVAL2', blank=True, null=True)
	cdelt1 = models.FloatField(db_column='CDELT1', blank=True, null=True)
	cdelt2 = models.FloatField(db_column='CDELT2', blank=True, null=True)
	cunit1 = models.TextField(db_column='CUNIT1', blank=True)
	cunit2 = models.TextField(db_column='CUNIT2', blank=True)
	crota2 = models.FloatField(db_column='CROTA2', blank=True, null=True)
	crder1 = models.FloatField(db_column='CRDER1', blank=True, null=True)
	crder2 = models.FloatField(db_column='CRDER2', blank=True, null=True)
	csyser1 = models.FloatField(db_column='CSYSER1', blank=True, null=True)
	csyser2 = models.FloatField(db_column='CSYSER2', blank=True, null=True)
	wcsname = models.TextField(db_column='WCSNAME', blank=True)
	dsun_obs = models.FloatField(db_column='DSUN_OBS', blank=True, null=True)
	dsun_ref = models.FloatField(db_column='DSUN_REF', blank=True, null=True)
	rsun_ref = models.FloatField(db_column='RSUN_REF', blank=True, null=True)
	crln_obs = models.FloatField(db_column='CRLN_OBS', blank=True, null=True)
	crlt_obs = models.FloatField(db_column='CRLT_OBS', blank=True, null=True)
	car_rot = models.IntegerField(db_column='CAR_ROT', blank=True, null=True)
	obs_vr = models.FloatField(db_column='OBS_VR', blank=True, null=True)
	obs_vw = models.FloatField(db_column='OBS_VW', blank=True, null=True)
	obs_vn = models.FloatField(db_column='OBS_VN', blank=True, null=True)
	rsun_obs = models.FloatField(db_column='RSUN_OBS', blank=True, null=True)
	t_obs = models.DateTimeField(db_column='T_OBS', blank=True, null=True)
	t_rec = models.DateTimeField(db_column='T_REC', blank=True, null=True)
	cadence = models.FloatField(db_column='CADENCE', blank=True, null=True)
	datasign = models.IntegerField(db_column='DATASIGN', blank=True, null=True)
	hflid = models.IntegerField(db_column='HFLID', blank=True, null=True)
	hcftid = models.IntegerField(db_column='HCFTID', blank=True, null=True)
	qlook = models.IntegerField(db_column='QLOOK', blank=True, null=True)
	cal_fsn = models.IntegerField(db_column='CAL_FSN', blank=True, null=True)
	lutquery = models.TextField(db_column='LUTQUERY', blank=True)
	tsel = models.FloatField(db_column='TSEL', blank=True, null=True)
	tfront = models.FloatField(db_column='TFRONT', blank=True, null=True)
	tintnum = models.IntegerField(db_column='TINTNUM', blank=True, null=True)
	sintnum = models.IntegerField(db_column='SINTNUM', blank=True, null=True)
	distcoef = models.TextField(db_column='DISTCOEF', blank=True)
	rotcoef = models.TextField(db_column='ROTCOEF', blank=True)
	odicoeff = models.IntegerField(db_column='ODICOEFF', blank=True, null=True)
	orocoeff = models.IntegerField(db_column='OROCOEFF', blank=True, null=True)
	polcalm = models.IntegerField(db_column='POLCALM', blank=True, null=True)
	codever0 = models.TextField(db_column='CODEVER0', blank=True)
	codever1 = models.TextField(db_column='CODEVER1', blank=True)
	codever2 = models.TextField(db_column='CODEVER2', blank=True)
	codever3 = models.TextField(db_column='CODEVER3', blank=True)
	calver64 = models.BigIntegerField(db_column='CALVER64', blank=True, null=True)
	series = models.TextField(db_column='SERIES', blank=True)
	recnum = models.BigIntegerField(db_column='RECNUM', blank=False, null=False, primary_key = True)
	sunum = models.BigIntegerField(db_column='SUNUM', blank=True, null=True)
	slotnum = models.IntegerField(db_column='SLOTNUM', blank=True, null=True)
	segment = models.TextField(db_column='SEGMENT', blank=True)
	
	class Meta:
		managed = False
		db_table = 'hmi_ic_45s_fits_header'


class HmiIc45sFitsKeyword(FitsKeyword):
	keyword = models.TextField(blank=False, primary_key = True)
	unit = models.TextField(blank=True)
	comment = models.TextField(blank=True)
	
	class Meta:
		managed = False
		db_table = 'hmi_ic_45s_fits_keyword'

class HmiM45sFitsHeader(FitsHeader):
	date = models.DateTimeField(db_column='DATE', blank=True, null=True)
	date_obs = models.DateTimeField(db_column='DATE-OBS', blank=True, null=True)
	telescop = models.TextField(db_column='TELESCOP', blank=True)
	instrume = models.TextField(db_column='INSTRUME', blank=True)
	wavelnth = models.FloatField(db_column='WAVELNTH', blank=True, null=True)
	camera = models.IntegerField(db_column='CAMERA', blank=True, null=True)
	bunit = models.TextField(db_column='BUNIT', blank=True)
	origin = models.TextField(db_column='ORIGIN', blank=True)
	content = models.TextField(db_column='CONTENT', blank=True)
	quality = models.IntegerField(db_column='QUALITY', blank=True, null=True)
	quallev1 = models.IntegerField(db_column='QUALLEV1', blank=True, null=True)
	bld_vers = models.TextField(db_column='BLD_VERS', blank=True)
	hcamid = models.IntegerField(db_column='HCAMID', blank=True, null=True)
	source = models.TextField(db_column='SOURCE', blank=True)
	totvals = models.IntegerField(db_column='TOTVALS', blank=True, null=True)
	datavals = models.IntegerField(db_column='DATAVALS', blank=True, null=True)
	missvals = models.IntegerField(db_column='MISSVALS', blank=True, null=True)
	satvals = models.IntegerField(db_column='SATVALS', blank=True, null=True)
	datamin2 = models.FloatField(db_column='DATAMIN2', blank=True, null=True)
	datamax2 = models.FloatField(db_column='DATAMAX2', blank=True, null=True)
	datamed2 = models.FloatField(db_column='DATAMED2', blank=True, null=True)
	datamea2 = models.FloatField(db_column='DATAMEA2', blank=True, null=True)
	datarms2 = models.FloatField(db_column='DATARMS2', blank=True, null=True)
	dataske2 = models.FloatField(db_column='DATASKE2', blank=True, null=True)
	datakur2 = models.FloatField(db_column='DATAKUR2', blank=True, null=True)
	datamin = models.FloatField(db_column='DATAMIN', blank=True, null=True)
	datamax = models.FloatField(db_column='DATAMAX', blank=True, null=True)
	datamedn = models.FloatField(db_column='DATAMEDN', blank=True, null=True)
	datamean = models.FloatField(db_column='DATAMEAN', blank=True, null=True)
	datarms = models.FloatField(db_column='DATARMS', blank=True, null=True)
	dataskew = models.FloatField(db_column='DATASKEW', blank=True, null=True)
	datakurt = models.FloatField(db_column='DATAKURT', blank=True, null=True)
	ctype1 = models.TextField(db_column='CTYPE1', blank=True)
	ctype2 = models.TextField(db_column='CTYPE2', blank=True)
	crpix1 = models.FloatField(db_column='CRPIX1', blank=True, null=True)
	crpix2 = models.FloatField(db_column='CRPIX2', blank=True, null=True)
	crval1 = models.FloatField(db_column='CRVAL1', blank=True, null=True)
	crval2 = models.FloatField(db_column='CRVAL2', blank=True, null=True)
	cdelt1 = models.FloatField(db_column='CDELT1', blank=True, null=True)
	cdelt2 = models.FloatField(db_column='CDELT2', blank=True, null=True)
	cunit1 = models.TextField(db_column='CUNIT1', blank=True)
	cunit2 = models.TextField(db_column='CUNIT2', blank=True)
	crota2 = models.FloatField(db_column='CROTA2', blank=True, null=True)
	crder1 = models.FloatField(db_column='CRDER1', blank=True, null=True)
	crder2 = models.FloatField(db_column='CRDER2', blank=True, null=True)
	csyser1 = models.FloatField(db_column='CSYSER1', blank=True, null=True)
	csyser2 = models.FloatField(db_column='CSYSER2', blank=True, null=True)
	wcsname = models.TextField(db_column='WCSNAME', blank=True)
	dsun_obs = models.FloatField(db_column='DSUN_OBS', blank=True, null=True)
	dsun_ref = models.FloatField(db_column='DSUN_REF', blank=True, null=True)
	rsun_ref = models.FloatField(db_column='RSUN_REF', blank=True, null=True)
	crln_obs = models.FloatField(db_column='CRLN_OBS', blank=True, null=True)
	crlt_obs = models.FloatField(db_column='CRLT_OBS', blank=True, null=True)
	car_rot = models.IntegerField(db_column='CAR_ROT', blank=True, null=True)
	obs_vr = models.FloatField(db_column='OBS_VR', blank=True, null=True)
	obs_vw = models.FloatField(db_column='OBS_VW', blank=True, null=True)
	obs_vn = models.FloatField(db_column='OBS_VN', blank=True, null=True)
	rsun_obs = models.FloatField(db_column='RSUN_OBS', blank=True, null=True)
	t_obs = models.DateTimeField(db_column='T_OBS', blank=True, null=True)
	t_rec = models.DateTimeField(db_column='T_REC', blank=True, null=True)
	cadence = models.FloatField(db_column='CADENCE', blank=True, null=True)
	datasign = models.IntegerField(db_column='DATASIGN', blank=True, null=True)
	hflid = models.IntegerField(db_column='HFLID', blank=True, null=True)
	hcftid = models.IntegerField(db_column='HCFTID', blank=True, null=True)
	qlook = models.IntegerField(db_column='QLOOK', blank=True, null=True)
	cal_fsn = models.IntegerField(db_column='CAL_FSN', blank=True, null=True)
	lutquery = models.TextField(db_column='LUTQUERY', blank=True)
	tsel = models.FloatField(db_column='TSEL', blank=True, null=True)
	tfront = models.FloatField(db_column='TFRONT', blank=True, null=True)
	tintnum = models.IntegerField(db_column='TINTNUM', blank=True, null=True)
	sintnum = models.IntegerField(db_column='SINTNUM', blank=True, null=True)
	distcoef = models.TextField(db_column='DISTCOEF', blank=True)
	rotcoef = models.TextField(db_column='ROTCOEF', blank=True)
	odicoeff = models.IntegerField(db_column='ODICOEFF', blank=True, null=True)
	orocoeff = models.IntegerField(db_column='OROCOEFF', blank=True, null=True)
	polcalm = models.IntegerField(db_column='POLCALM', blank=True, null=True)
	codever0 = models.TextField(db_column='CODEVER0', blank=True)
	codever1 = models.TextField(db_column='CODEVER1', blank=True)
	codever2 = models.TextField(db_column='CODEVER2', blank=True)
	codever3 = models.TextField(db_column='CODEVER3', blank=True)
	calver64 = models.BigIntegerField(db_column='CALVER64', blank=True, null=True)
	series = models.TextField(db_column='SERIES', blank=True)
	recnum = models.BigIntegerField(db_column='RECNUM', blank=False, null=False, primary_key = True)
	sunum = models.BigIntegerField(db_column='SUNUM', blank=True, null=True)
	slotnum = models.IntegerField(db_column='SLOTNUM', blank=True, null=True)
	segment = models.TextField(db_column='SEGMENT', blank=True)
	
	class Meta:
		managed = False
		db_table = 'hmi_m_45s_fits_header'


class HmiM45sFitsKeyword(FitsKeyword):
	keyword = models.TextField(blank=False, primary_key = True)
	unit = models.TextField(blank=True)
	comment = models.TextField(blank=True)
	
	class Meta:
		managed = False
		db_table = 'hmi_m_45s_fits_keyword'

class HmiMharp720SFitsHeader(FitsHeader):
	date = models.DateTimeField(db_column='DATE', blank=True, null=True)
	telescop = models.TextField(db_column='TELESCOP', blank=True)
	instrume = models.TextField(db_column='INSTRUME', blank=True)
	wavelnth = models.FloatField(db_column='WAVELNTH', blank=True, null=True)
	camera = models.IntegerField(db_column='CAMERA', blank=True, null=True)
	bunit = models.TextField(db_column='BUNIT', blank=True)
	content = models.TextField(db_column='CONTENT', blank=True)
	bld_vers = models.TextField(db_column='BLD_VERS', blank=True)
	quality = models.IntegerField(db_column='QUALITY', blank=True, null=True)
	quallev1 = models.IntegerField(db_column='QUALLEV1', blank=True, null=True)
	t_obs = models.DateTimeField(db_column='T_OBS', blank=True, null=True)
	t_rec = models.DateTimeField(db_column='T_REC', blank=True, null=True)
	cadence = models.FloatField(db_column='CADENCE', blank=True, null=True)
	datasign = models.IntegerField(db_column='DATASIGN', blank=True, null=True)
	harpnum = models.IntegerField(db_column='HARPNUM', blank=True, null=True)
	date_obs = models.DateTimeField(db_column='DATE-OBS', blank=True, null=True)
	hflid = models.IntegerField(db_column='HFLID', blank=True, null=True)
	hcftid = models.IntegerField(db_column='HCFTID', blank=True, null=True)
	qlook = models.IntegerField(db_column='QLOOK', blank=True, null=True)
	tintnum = models.IntegerField(db_column='TINTNUM', blank=True, null=True)
	sintnum = models.IntegerField(db_column='SINTNUM', blank=True, null=True)
	distcoef = models.TextField(db_column='DISTCOEF', blank=True)
	rotcoef = models.TextField(db_column='ROTCOEF', blank=True)
	polcalm = models.IntegerField(db_column='POLCALM', blank=True, null=True)
	codever0 = models.TextField(db_column='CODEVER0', blank=True)
	codever1 = models.TextField(db_column='CODEVER1', blank=True)
	codever2 = models.TextField(db_column='CODEVER2', blank=True)
	codever3 = models.TextField(db_column='CODEVER3', blank=True)
	ctype1 = models.TextField(db_column='CTYPE1', blank=True)
	ctype2 = models.TextField(db_column='CTYPE2', blank=True)
	crpix1 = models.FloatField(db_column='CRPIX1', blank=True, null=True)
	crpix2 = models.FloatField(db_column='CRPIX2', blank=True, null=True)
	crval1 = models.FloatField(db_column='CRVAL1', blank=True, null=True)
	crval2 = models.FloatField(db_column='CRVAL2', blank=True, null=True)
	cdelt1 = models.FloatField(db_column='CDELT1', blank=True, null=True)
	cdelt2 = models.FloatField(db_column='CDELT2', blank=True, null=True)
	cunit1 = models.TextField(db_column='CUNIT1', blank=True)
	cunit2 = models.TextField(db_column='CUNIT2', blank=True)
	crota2 = models.FloatField(db_column='CROTA2', blank=True, null=True)
	crder1 = models.FloatField(db_column='CRDER1', blank=True, null=True)
	crder2 = models.FloatField(db_column='CRDER2', blank=True, null=True)
	csyser1 = models.FloatField(db_column='CSYSER1', blank=True, null=True)
	csyser2 = models.FloatField(db_column='CSYSER2', blank=True, null=True)
	wcsname = models.TextField(db_column='WCSNAME', blank=True)
	imcrpix1 = models.FloatField(db_column='IMCRPIX1', blank=True, null=True)
	imcrpix2 = models.FloatField(db_column='IMCRPIX2', blank=True, null=True)
	imcrval1 = models.FloatField(db_column='IMCRVAL1', blank=True, null=True)
	imcrval2 = models.FloatField(db_column='IMCRVAL2', blank=True, null=True)
	crsize1 = models.IntegerField(db_column='CRSIZE1', blank=True, null=True)
	crsize2 = models.IntegerField(db_column='CRSIZE2', blank=True, null=True)
	dsun_obs = models.FloatField(db_column='DSUN_OBS', blank=True, null=True)
	dsun_ref = models.FloatField(db_column='DSUN_REF', blank=True, null=True)
	rsun_ref = models.FloatField(db_column='RSUN_REF', blank=True, null=True)
	crln_obs = models.FloatField(db_column='CRLN_OBS', blank=True, null=True)
	crlt_obs = models.FloatField(db_column='CRLT_OBS', blank=True, null=True)
	car_rot = models.IntegerField(db_column='CAR_ROT', blank=True, null=True)
	obs_vr = models.FloatField(db_column='OBS_VR', blank=True, null=True)
	obs_vw = models.FloatField(db_column='OBS_VW', blank=True, null=True)
	obs_vn = models.FloatField(db_column='OBS_VN', blank=True, null=True)
	rsun_obs = models.FloatField(db_column='RSUN_OBS', blank=True, null=True)
	totvals = models.IntegerField(db_column='TOTVALS', blank=True, null=True)
	datavals = models.IntegerField(db_column='DATAVALS', blank=True, null=True)
	missvals = models.IntegerField(db_column='MISSVALS', blank=True, null=True)
	offdisk = models.IntegerField(db_column='OFFDISK', blank=True, null=True)
	quiet = models.IntegerField(db_column='QUIET', blank=True, null=True)
	active = models.IntegerField(db_column='ACTIVE', blank=True, null=True)
	nclass = models.IntegerField(db_column='NCLASS', blank=True, null=True)
	on_patch = models.IntegerField(db_column='ON_PATCH', blank=True, null=True)
	mask = models.IntegerField(db_column='MASK', blank=True, null=True)
	arm_qual = models.IntegerField(db_column='ARM_QUAL', blank=True, null=True)
	arm_ncln = models.IntegerField(db_column='ARM_NCLN', blank=True, null=True)
	h_merge = models.IntegerField(db_column='H_MERGE', blank=True, null=True)
	h_faint = models.IntegerField(db_column='H_FAINT', blank=True, null=True)
	armcodev = models.TextField(db_column='ARMCODEV', blank=True)
	armdocu = models.TextField(db_column='ARMDOCU', blank=True)
	hrpcodev = models.TextField(db_column='HRPCODEV', blank=True)
	hrpdocu = models.TextField(db_column='HRPDOCU', blank=True)
	arm_modl = models.TextField(db_column='ARM_MODL', blank=True)
	arm_edge = models.FloatField(db_column='ARM_EDGE', blank=True, null=True)
	arm_beta = models.TextField(db_column='ARM_BETA', blank=True)
	tkp_kwid = models.TextField(db_column='TKP_KWID', blank=True)
	tkp_klat = models.TextField(db_column='TKP_KLAT', blank=True)
	tkp_tau = models.TextField(db_column='TKP_TAU', blank=True)
	tkp_tau2 = models.TextField(db_column='TKP_TAU2', blank=True)
	tkp_actv = models.TextField(db_column='TKP_ACTV', blank=True)
	tkp_fnum = models.TextField(db_column='TKP_FNUM', blank=True)
	tkp_ftim = models.TextField(db_column='TKP_FTIM', blank=True)
	tkp_mapr = models.TextField(db_column='TKP_MAPR', blank=True)
	tkp_runn = models.TextField(db_column='TKP_RUNN', blank=True)
	latdtmin = models.FloatField(db_column='LATDTMIN', blank=True, null=True)
	londtmin = models.FloatField(db_column='LONDTMIN', blank=True, null=True)
	latdtmax = models.FloatField(db_column='LATDTMAX', blank=True, null=True)
	londtmax = models.FloatField(db_column='LONDTMAX', blank=True, null=True)
	omega_dt = models.FloatField(db_column='OMEGA_DT', blank=True, null=True)
	npix = models.IntegerField(db_column='NPIX', blank=True, null=True)
	size = models.FloatField(db_column='SIZE', blank=True, null=True)
	area = models.FloatField(db_column='AREA', blank=True, null=True)
	nacr = models.IntegerField(db_column='NACR', blank=True, null=True)
	size_acr = models.FloatField(db_column='SIZE_ACR', blank=True, null=True)
	area_acr = models.FloatField(db_column='AREA_ACR', blank=True, null=True)
	mtot = models.FloatField(db_column='MTOT', blank=True, null=True)
	mnet = models.FloatField(db_column='MNET', blank=True, null=True)
	mpos_tot = models.FloatField(db_column='MPOS_TOT', blank=True, null=True)
	mneg_tot = models.FloatField(db_column='MNEG_TOT', blank=True, null=True)
	mmean = models.FloatField(db_column='MMEAN', blank=True, null=True)
	mstdev = models.FloatField(db_column='MSTDEV', blank=True, null=True)
	mskew = models.FloatField(db_column='MSKEW', blank=True, null=True)
	mkurt = models.FloatField(db_column='MKURT', blank=True, null=True)
	lat_min = models.FloatField(db_column='LAT_MIN', blank=True, null=True)
	lon_min = models.FloatField(db_column='LON_MIN', blank=True, null=True)
	lat_max = models.FloatField(db_column='LAT_MAX', blank=True, null=True)
	lon_max = models.FloatField(db_column='LON_MAX', blank=True, null=True)
	lat_fwt = models.FloatField(db_column='LAT_FWT', blank=True, null=True)
	lon_fwt = models.FloatField(db_column='LON_FWT', blank=True, null=True)
	latfwtpo = models.FloatField(db_column='LATFWTPO', blank=True, null=True)
	lonfwtpo = models.FloatField(db_column='LONFWTPO', blank=True, null=True)
	latfwtne = models.FloatField(db_column='LATFWTNE', blank=True, null=True)
	lonfwtne = models.FloatField(db_column='LONFWTNE', blank=True, null=True)
	t_frst = models.DateTimeField(db_column='T_FRST', blank=True, null=True)
	t_frst1 = models.DateTimeField(db_column='T_FRST1', blank=True, null=True)
	t_last1 = models.DateTimeField(db_column='T_LAST1', blank=True, null=True)
	t_last = models.DateTimeField(db_column='T_LAST', blank=True, null=True)
	n_patch = models.IntegerField(db_column='N_PATCH', blank=True, null=True)
	n_patch1 = models.IntegerField(db_column='N_PATCH1', blank=True, null=True)
	n_patchm = models.IntegerField(db_column='N_PATCHM', blank=True, null=True)
	noaa_ar = models.IntegerField(db_column='NOAA_AR', blank=True, null=True)
	noaa_num = models.IntegerField(db_column='NOAA_NUM', blank=True, null=True)
	noaa_ars = models.TextField(db_column='NOAA_ARS', blank=True)
	calver64 = models.BigIntegerField(db_column='CALVER64', blank=True, null=True)
	recnum = models.BigIntegerField(db_column='RECNUM', blank=False, null=False, primary_key = True)
	series = models.TextField(db_column='SERIES', blank=True)
	sunum = models.BigIntegerField(db_column='SUNUM', blank=True, null=True)
	slotnum = models.IntegerField(db_column='SLOTNUM', blank=True, null=True)
	segment = models.TextField(db_column='SEGMENT', blank=True)
	class Meta:
		managed = False
		db_table = 'hmi_mharp_720s_fits_header'

class HmiMharp720SFitsKeyword(FitsKeyword):
	keyword = models.TextField(blank=False, primary_key = True)
	unit = models.TextField(blank=True)
	comment = models.TextField(blank=True)
	class Meta:
		managed = False
		db_table = 'hmi_mharp_720s_fits_keyword'

class HmiSharp720SFitsHeader(FitsHeader):
	date = models.DateTimeField(db_column='DATE', blank=True, null=True)
	date_s = models.DateTimeField(db_column='DATE_S', blank=True, null=True)
	date_b = models.DateTimeField(db_column='DATE_B', blank=True, null=True)
	date_obs = models.DateTimeField(db_column='DATE-OBS', blank=True, null=True)
	t_obs = models.DateTimeField(db_column='T_OBS', blank=True, null=True)
	t_rec = models.DateTimeField(db_column='T_REC', blank=True, null=True)
	cadence = models.FloatField(db_column='CADENCE', blank=True, null=True)
	usflux = models.FloatField(db_column='USFLUX', blank=True, null=True)
	meangam = models.FloatField(db_column='MEANGAM', blank=True, null=True)
	meangbt = models.FloatField(db_column='MEANGBT', blank=True, null=True)
	meangbz = models.FloatField(db_column='MEANGBZ', blank=True, null=True)
	meangbh = models.FloatField(db_column='MEANGBH', blank=True, null=True)
	meanjzd = models.FloatField(db_column='MEANJZD', blank=True, null=True)
	totusjz = models.FloatField(db_column='TOTUSJZ', blank=True, null=True)
	meanalp = models.FloatField(db_column='MEANALP', blank=True, null=True)
	meanjzh = models.FloatField(db_column='MEANJZH', blank=True, null=True)
	totusjh = models.FloatField(db_column='TOTUSJH', blank=True, null=True)
	absnjzh = models.FloatField(db_column='ABSNJZH', blank=True, null=True)
	savncpp = models.FloatField(db_column='SAVNCPP', blank=True, null=True)
	meanpot = models.FloatField(db_column='MEANPOT', blank=True, null=True)
	totpot = models.FloatField(db_column='TOTPOT', blank=True, null=True)
	meanshr = models.FloatField(db_column='MEANSHR', blank=True, null=True)
	shrgt45 = models.FloatField(db_column='SHRGT45', blank=True, null=True)
	r_value = models.FloatField(db_column='R_VALUE', blank=True, null=True)
	gwill = models.FloatField(db_column='GWILL', blank=True, null=True)
	ctype1 = models.TextField(db_column='CTYPE1', blank=True)
	ctype2 = models.TextField(db_column='CTYPE2', blank=True)
	crpix1 = models.FloatField(db_column='CRPIX1', blank=True, null=True)
	crpix2 = models.FloatField(db_column='CRPIX2', blank=True, null=True)
	crval1 = models.FloatField(db_column='CRVAL1', blank=True, null=True)
	crval2 = models.FloatField(db_column='CRVAL2', blank=True, null=True)
	cdelt1 = models.FloatField(db_column='CDELT1', blank=True, null=True)
	cdelt2 = models.FloatField(db_column='CDELT2', blank=True, null=True)
	cunit1 = models.TextField(db_column='CUNIT1', blank=True)
	cunit2 = models.TextField(db_column='CUNIT2', blank=True)
	imcrpix1 = models.FloatField(db_column='IMCRPIX1', blank=True, null=True)
	imcrpix2 = models.FloatField(db_column='IMCRPIX2', blank=True, null=True)
	imcrval1 = models.FloatField(db_column='IMCRVAL1', blank=True, null=True)
	imcrval2 = models.FloatField(db_column='IMCRVAL2', blank=True, null=True)
	crota2 = models.FloatField(db_column='CROTA2', blank=True, null=True)
	crder1 = models.FloatField(db_column='CRDER1', blank=True, null=True)
	crder2 = models.FloatField(db_column='CRDER2', blank=True, null=True)
	csyser1 = models.FloatField(db_column='CSYSER1', blank=True, null=True)
	csyser2 = models.FloatField(db_column='CSYSER2', blank=True, null=True)
	wcsname = models.TextField(db_column='WCSNAME', blank=True)
	dsun_obs = models.FloatField(db_column='DSUN_OBS', blank=True, null=True)
	dsun_ref = models.FloatField(db_column='DSUN_REF', blank=True, null=True)
	rsun_ref = models.FloatField(db_column='RSUN_REF', blank=True, null=True)
	crln_obs = models.FloatField(db_column='CRLN_OBS', blank=True, null=True)
	crlt_obs = models.FloatField(db_column='CRLT_OBS', blank=True, null=True)
	car_rot = models.IntegerField(db_column='CAR_ROT', blank=True, null=True)
	obs_vr = models.FloatField(db_column='OBS_VR', blank=True, null=True)
	obs_vw = models.FloatField(db_column='OBS_VW', blank=True, null=True)
	obs_vn = models.FloatField(db_column='OBS_VN', blank=True, null=True)
	rsun_obs = models.FloatField(db_column='RSUN_OBS', blank=True, null=True)
	telescop = models.TextField(db_column='TELESCOP', blank=True)
	instrume = models.TextField(db_column='INSTRUME', blank=True)
	wavelnth = models.FloatField(db_column='WAVELNTH', blank=True, null=True)
	camera = models.IntegerField(db_column='CAMERA', blank=True, null=True)
	quality = models.IntegerField(db_column='QUALITY', blank=True, null=True)
	qual_s = models.IntegerField(db_column='QUAL_S', blank=True, null=True)
	quallev1 = models.IntegerField(db_column='QUALLEV1', blank=True, null=True)
	bunit = models.TextField(db_column='BUNIT', blank=True)
	origin = models.TextField(db_column='ORIGIN', blank=True)
	content = models.TextField(db_column='CONTENT', blank=True)
	history = models.TextField(db_column='HISTORY', blank=True)
	comment = models.TextField(db_column='COMMENT', blank=True)
	bld_vers = models.TextField(db_column='BLD_VERS', blank=True)
	calver64 = models.BigIntegerField(db_column='CALVER64', blank=True, null=True)
	hflid = models.IntegerField(db_column='HFLID', blank=True, null=True)
	hcftid = models.IntegerField(db_column='HCFTID', blank=True, null=True)
	qlook = models.IntegerField(db_column='QLOOK', blank=True, null=True)
	harpnum = models.IntegerField(db_column='HARPNUM', blank=True, null=True)
	offdisk = models.IntegerField(db_column='OFFDISK', blank=True, null=True)
	quiet = models.IntegerField(db_column='QUIET', blank=True, null=True)
	active = models.IntegerField(db_column='ACTIVE', blank=True, null=True)
	nclass = models.IntegerField(db_column='NCLASS', blank=True, null=True)
	on_patch = models.IntegerField(db_column='ON_PATCH', blank=True, null=True)
	mask = models.IntegerField(db_column='MASK', blank=True, null=True)
	arm_qual = models.IntegerField(db_column='ARM_QUAL', blank=True, null=True)
	arm_ncln = models.IntegerField(db_column='ARM_NCLN', blank=True, null=True)
	h_merge = models.IntegerField(db_column='H_MERGE', blank=True, null=True)
	h_faint = models.IntegerField(db_column='H_FAINT', blank=True, null=True)
	armcodev = models.TextField(db_column='ARMCODEV', blank=True)
	armdocu = models.TextField(db_column='ARMDOCU', blank=True)
	hrpcodev = models.TextField(db_column='HRPCODEV', blank=True)
	hrpdocu = models.TextField(db_column='HRPDOCU', blank=True)
	arm_modl = models.TextField(db_column='ARM_MODL', blank=True)
	arm_edge = models.FloatField(db_column='ARM_EDGE', blank=True, null=True)
	arm_beta = models.TextField(db_column='ARM_BETA', blank=True)
	tkp_kwid = models.TextField(db_column='TKP_KWID', blank=True)
	tkp_klat = models.TextField(db_column='TKP_KLAT', blank=True)
	tkp_tau = models.TextField(db_column='TKP_TAU', blank=True)
	tkp_tau2 = models.TextField(db_column='TKP_TAU2', blank=True)
	tkp_actv = models.TextField(db_column='TKP_ACTV', blank=True)
	tkp_fnum = models.TextField(db_column='TKP_FNUM', blank=True)
	tkp_ftim = models.TextField(db_column='TKP_FTIM', blank=True)
	tkp_mapr = models.TextField(db_column='TKP_MAPR', blank=True)
	tkp_runn = models.TextField(db_column='TKP_RUNN', blank=True)
	tkp_runt = models.TextField(db_column='TKP_RUNT', blank=True)
	latdtmin = models.FloatField(db_column='LATDTMIN', blank=True, null=True)
	londtmin = models.FloatField(db_column='LONDTMIN', blank=True, null=True)
	latdtmax = models.FloatField(db_column='LATDTMAX', blank=True, null=True)
	londtmax = models.FloatField(db_column='LONDTMAX', blank=True, null=True)
	omega_dt = models.FloatField(db_column='OMEGA_DT', blank=True, null=True)
	npix = models.IntegerField(db_column='NPIX', blank=True, null=True)
	size = models.FloatField(db_column='SIZE', blank=True, null=True)
	area = models.FloatField(db_column='AREA', blank=True, null=True)
	nacr = models.IntegerField(db_column='NACR', blank=True, null=True)
	size_acr = models.FloatField(db_column='SIZE_ACR', blank=True, null=True)
	area_acr = models.FloatField(db_column='AREA_ACR', blank=True, null=True)
	mtot = models.FloatField(db_column='MTOT', blank=True, null=True)
	mnet = models.FloatField(db_column='MNET', blank=True, null=True)
	mpos_tot = models.FloatField(db_column='MPOS_TOT', blank=True, null=True)
	mneg_tot = models.FloatField(db_column='MNEG_TOT', blank=True, null=True)
	mmean = models.FloatField(db_column='MMEAN', blank=True, null=True)
	mstdev = models.FloatField(db_column='MSTDEV', blank=True, null=True)
	mskew = models.FloatField(db_column='MSKEW', blank=True, null=True)
	mkurt = models.FloatField(db_column='MKURT', blank=True, null=True)
	lat_min = models.FloatField(db_column='LAT_MIN', blank=True, null=True)
	lon_min = models.FloatField(db_column='LON_MIN', blank=True, null=True)
	lat_max = models.FloatField(db_column='LAT_MAX', blank=True, null=True)
	lon_max = models.FloatField(db_column='LON_MAX', blank=True, null=True)
	lat_fwt = models.FloatField(db_column='LAT_FWT', blank=True, null=True)
	lon_fwt = models.FloatField(db_column='LON_FWT', blank=True, null=True)
	latfwtpo = models.FloatField(db_column='LATFWTPO', blank=True, null=True)
	lonfwtpo = models.FloatField(db_column='LONFWTPO', blank=True, null=True)
	latfwtne = models.FloatField(db_column='LATFWTNE', blank=True, null=True)
	lonfwtne = models.FloatField(db_column='LONFWTNE', blank=True, null=True)
	t_frst = models.DateTimeField(db_column='T_FRST', blank=True, null=True)
	t_frst1 = models.DateTimeField(db_column='T_FRST1', blank=True, null=True)
	t_last1 = models.DateTimeField(db_column='T_LAST1', blank=True, null=True)
	t_last = models.DateTimeField(db_column='T_LAST', blank=True, null=True)
	n_patch = models.IntegerField(db_column='N_PATCH', blank=True, null=True)
	n_patch1 = models.IntegerField(db_column='N_PATCH1', blank=True, null=True)
	n_patchm = models.IntegerField(db_column='N_PATCHM', blank=True, null=True)
	noaa_ar = models.IntegerField(db_column='NOAA_AR', blank=True, null=True)
	noaa_num = models.IntegerField(db_column='NOAA_NUM', blank=True, null=True)
	noaa_ars = models.TextField(db_column='NOAA_ARS', blank=True)
	tintnum = models.IntegerField(db_column='TINTNUM', blank=True, null=True)
	sintnum = models.IntegerField(db_column='SINTNUM', blank=True, null=True)
	distcoef = models.TextField(db_column='DISTCOEF', blank=True)
	rotcoef = models.TextField(db_column='ROTCOEF', blank=True)
	polcalm = models.IntegerField(db_column='POLCALM', blank=True, null=True)
	source = models.TextField(db_column='SOURCE', blank=True)
	codever0 = models.TextField(db_column='CODEVER0', blank=True)
	codever1 = models.TextField(db_column='CODEVER1', blank=True)
	codever2 = models.TextField(db_column='CODEVER2', blank=True)
	codever3 = models.TextField(db_column='CODEVER3', blank=True)
	codever4 = models.TextField(db_column='CODEVER4', blank=True)
	codever5 = models.TextField(db_column='CODEVER5', blank=True)
	codever6 = models.TextField(db_column='CODEVER6', blank=True)
	codever7 = models.TextField(db_column='CODEVER7', blank=True)
	invcodev = models.TextField(db_column='INVCODEV', blank=True)
	invdocu = models.TextField(db_column='INVDOCU', blank=True)
	invitera = models.IntegerField(db_column='INVITERA', blank=True, null=True)
	invlmbda = models.IntegerField(db_column='INVLMBDA', blank=True, null=True)
	invlmbdf = models.IntegerField(db_column='INVLMBDF', blank=True, null=True)
	invtunen = models.IntegerField(db_column='INVTUNEN', blank=True, null=True)
	invsvdtl = models.FloatField(db_column='INVSVDTL', blank=True, null=True)
	invchist = models.FloatField(db_column='INVCHIST', blank=True, null=True)
	invpolth = models.FloatField(db_column='INVPOLTH', blank=True, null=True)
	invpjump = models.FloatField(db_column='INVPJUMP', blank=True, null=True)
	invlmbdm = models.FloatField(db_column='INVLMBDM', blank=True, null=True)
	invlmbd0 = models.FloatField(db_column='INVLMBD0', blank=True, null=True)
	invlmbdb = models.FloatField(db_column='INVLMBDB', blank=True, null=True)
	invdltla = models.FloatField(db_column='INVDLTLA', blank=True, null=True)
	invlmbds = models.IntegerField(db_column='INVLMBDS', blank=True, null=True)
	invlmbms = models.FloatField(db_column='INVLMBMS', blank=True, null=True)
	invlyotw = models.FloatField(db_column='INVLYOTW', blank=True, null=True)
	invwnarw = models.FloatField(db_column='INVWNARW', blank=True, null=True)
	invwspac = models.FloatField(db_column='INVWSPAC', blank=True, null=True)
	invintth = models.FloatField(db_column='INVINTTH', blank=True, null=True)
	invnfcti = models.FloatField(db_column='INVNFCTI', blank=True, null=True)
	invnfctq = models.FloatField(db_column='INVNFCTQ', blank=True, null=True)
	invnfctu = models.FloatField(db_column='INVNFCTU', blank=True, null=True)
	invnfctv = models.FloatField(db_column='INVNFCTV', blank=True, null=True)
	invconti = models.IntegerField(db_column='INVCONTI', blank=True, null=True)
	invwghti = models.FloatField(db_column='INVWGHTI', blank=True, null=True)
	invwghtq = models.FloatField(db_column='INVWGHTQ', blank=True, null=True)
	invwghtu = models.FloatField(db_column='INVWGHTU', blank=True, null=True)
	invwghtv = models.FloatField(db_column='INVWGHTV', blank=True, null=True)
	invstlgt = models.TextField(db_column='INVSTLGT', blank=True)
	invfreep = models.IntegerField(db_column='INVFREEP', blank=True, null=True)
	invflprf = models.TextField(db_column='INVFLPRF', blank=True)
	invphmap = models.TextField(db_column='INVPHMAP', blank=True)
	invvlave = models.FloatField(db_column='INVVLAVE', blank=True, null=True)
	invblave = models.FloatField(db_column='INVBLAVE', blank=True, null=True)
	invbbave = models.FloatField(db_column='INVBBAVE', blank=True, null=True)
	invnprcs = models.IntegerField(db_column='INVNPRCS', blank=True, null=True)
	invncnvg = models.IntegerField(db_column='INVNCNVG', blank=True, null=True)
	invkeys1 = models.TextField(db_column='INVKEYS1', blank=True)
	invkeys2 = models.TextField(db_column='INVKEYS2', blank=True)
	invkeys3 = models.TextField(db_column='INVKEYS3', blank=True)
	invkeyi1 = models.IntegerField(db_column='INVKEYI1', blank=True, null=True)
	invkeyi2 = models.IntegerField(db_column='INVKEYI2', blank=True, null=True)
	invkeyi3 = models.IntegerField(db_column='INVKEYI3', blank=True, null=True)
	invkeyd1 = models.FloatField(db_column='INVKEYD1', blank=True, null=True)
	invkeyd2 = models.FloatField(db_column='INVKEYD2', blank=True, null=True)
	invkeyd3 = models.FloatField(db_column='INVKEYD3', blank=True, null=True)
	ambcodev = models.TextField(db_column='AMBCODEV', blank=True)
	ambdocu = models.TextField(db_column='AMBDOCU', blank=True)
	ambgmtry = models.IntegerField(db_column='AMBGMTRY', blank=True, null=True)
	ambpatch = models.IntegerField(db_column='AMBPATCH', blank=True, null=True)
	ambweak = models.IntegerField(db_column='AMBWEAK', blank=True, null=True)
	ambnerod = models.IntegerField(db_column='AMBNEROD', blank=True, null=True)
	ambngrow = models.IntegerField(db_column='AMBNGROW', blank=True, null=True)
	ambnpad = models.IntegerField(db_column='AMBNPAD', blank=True, null=True)
	ambnap = models.IntegerField(db_column='AMBNAP', blank=True, null=True)
	ambntx = models.IntegerField(db_column='AMBNTX', blank=True, null=True)
	ambnty = models.IntegerField(db_column='AMBNTY', blank=True, null=True)
	ambbthr0 = models.FloatField(db_column='AMBBTHR0', blank=True, null=True)
	ambbthr1 = models.FloatField(db_column='AMBBTHR1', blank=True, null=True)
	ambseed = models.IntegerField(db_column='AMBSEED', blank=True, null=True)
	ambneq = models.IntegerField(db_column='AMBNEQ', blank=True, null=True)
	amblmbda = models.FloatField(db_column='AMBLMBDA', blank=True, null=True)
	ambtfct0 = models.FloatField(db_column='AMBTFCT0', blank=True, null=True)
	ambtfctr = models.FloatField(db_column='AMBTFCTR', blank=True, null=True)
	datavals = models.IntegerField(db_column='DATAVALS', blank=True, null=True)
	missvals = models.IntegerField(db_column='MISSVALS', blank=True, null=True)
	datamin = models.FloatField(db_column='DATAMIN', blank=True, null=True)
	datamax = models.FloatField(db_column='DATAMAX', blank=True, null=True)
	datamedn = models.FloatField(db_column='DATAMEDN', blank=True, null=True)
	datamean = models.FloatField(db_column='DATAMEAN', blank=True, null=True)
	datarms = models.FloatField(db_column='DATARMS', blank=True, null=True)
	errgam = models.FloatField(db_column='ERRGAM', blank=True, null=True)
	errmsha = models.FloatField(db_column='ERRMSHA', blank=True, null=True)
	errbh = models.FloatField(db_column='ERRBH', blank=True, null=True)
	errbt = models.FloatField(db_column='ERRBT', blank=True, null=True)
	errbz = models.FloatField(db_column='ERRBZ', blank=True, null=True)
	erralp = models.FloatField(db_column='ERRALP', blank=True, null=True)
	errmih = models.FloatField(db_column='ERRMIH', blank=True, null=True)
	cmask = models.FloatField(db_column='CMASK', blank=True, null=True)
	errusi = models.FloatField(db_column='ERRUSI', blank=True, null=True)
	errtai = models.FloatField(db_column='ERRTAI', blank=True, null=True)
	errmpot = models.FloatField(db_column='ERRMPOT', blank=True, null=True)
	errtui = models.FloatField(db_column='ERRTUI', blank=True, null=True)
	doffset = models.IntegerField(db_column='DOFFSET', blank=True, null=True)
	errjz = models.FloatField(db_column='ERRJZ', blank=True, null=True)
	errtpot = models.FloatField(db_column='ERRTPOT', blank=True, null=True)
	errjht = models.FloatField(db_column='ERRJHT', blank=True, null=True)
	errvf = models.FloatField(db_column='ERRVF', blank=True, null=True)
	recnum = models.BigIntegerField(db_column='RECNUM', blank=False, null=False, primary_key = True)
	series = models.TextField(db_column='SERIES', blank=True)
	sunum = models.BigIntegerField(db_column='SUNUM', blank=True, null=True)
	slotnum = models.IntegerField(db_column='SLOTNUM', blank=True, null=True)
	segment = models.TextField(db_column='SEGMENT', blank=True)
	class Meta:
		managed = False
		db_table = 'hmi_sharp_720s_fits_header'

class HmiSharp720SFitsKeyword(FitsKeyword):
	keyword = models.TextField(blank=False, primary_key = True)
	unit = models.TextField(blank=True)
	comment = models.TextField(blank=True)
	class Meta:
		managed = False
		db_table = 'hmi_sharp_720s_fits_keyword'
